Skip to content
geeksforgeeks
Courses
Tutorials
Practice
Contests
Search...

Sign In

DSA Course
DSA
Interview Problems on String
Practice String
MCQs on String
Tutorial on String
String Operations
Sort String
Substring & Subsequence
Iterate String
Reverse String
Rotate String
String Concatenation
Compare Strings
KMP Algorithm
Boyer-Moore Algorithm
Rabin-Karp Algorithm
Z Algorithm
String Guide for CP

Sign In
â–²
Explore GfG Courses
Share Your Experiences
std::string::crbegin() and std::string::crend() in C++ with Examples
Binary literals in C++14 with Examples
std::string::rfind in C++ with Examples
Code Bloating in C++ with Examples
Ellipsis in C++ with Examples
std::string::find_last_of in C++ with Examples
Clockwise/Spiral Rule in C/C++ with Examples
Find if a String ends With the Given Substring in C++
Deprecated attribute in C++14 with Examples
How to Create a Class with Constructors and Destructors in C++?
tellg() function in C++ with example
Life cycle of Objects in C++ with Example
Why Breaks are used in C++ Switch Statement?
How to Find the Last Element in a Set in C++?
How to Access First Element of a List in C++?
How to Declare a Stack in C++?
How to Access Elements of a Pair in C++?
How to Check if a String is Empty in C++?
<type_traits> Header in C++
DSA to DevelopmentCourse
starts_with() and ends_with() in C++20 with Examples
Last Updated : 28 Jan, 2021
In this article, we will be discussing starts_with() and ends_with() with examples in C++20.

starts_with()
This function efficiently checks if a string begins with the given prefix or not. This function written in both std::basic_string and in std::basic_string_view. 

Syntax:


template <typename PrefixType> bool starts_with(PrefixType prefix)


In the above syntax the prefix can be:

string
string view
single character or C-style string with null-terminated character
starts_with() with different types of Prefix:

a
bool starts_with(std::basic_string_view<Char T, Traits> x) const noexcept;
bool starts_with(CharT x) const noexcept;
bool starts_with(const CharT *x) const;


All the three overloaded forms of the function effectively return std::basic_string_view<Char T,  Traits>(data(), size()).starts_with(x);

Parameters: It requires a single character sequence or a single character to compare to the start of the string.

Return Value: It returns the boolean true or false indication the following:

True: If string starts with the prefix.
False: If string does not start with the prefix.
Program 1: a

Below program to demonstrates the concept of starts_with() in C++:


// C++ program to illustrate the use
// of starts_with()
#include <iostream>
#include <string>
#include <string_view>
using namespace std;

// Function template to check if the
// given string starts with the given
// prefix or not
template <typename PrefixType>
void if_prefix(const std::string& str,
               PrefixType prefix)
{
    cout << "'" << str << "' starts with '"
         << prefix << "': "
         << str.starts_with(prefix)
         << endl;
}

// Driver Code
int main()
{
    string str = { "geeksforgeeks" };

    if_prefix(str, string("geek"));

    // prefix is string
    if_prefix(str, string_view("geek"));

    // prefix is string view
    if_prefix(str, 'g');

    // prefix is single character
    if_prefix(str, "geek\0");

    // prefix is C-style string
    if_prefix(str, string("for"));

    if_prefix(str, string("Geek"));

    if_prefix(str, 'x');

    return 0;
}
Output:


This function efficiently checks if a string ends with the given suffix or not. This function written in both std::basic_string and in std::basic_string_view.

Syntax:


template <typename SuffixType> bool starts_with(SuffixType suffix)


In the above syntax the suffix can be:

string
string view
single character or C-style string with null-terminated character.
ends with() different types of Suffix:


constexpr bool ends_with(std::basic_string_view<Char T, Traits> sv) const noexcept;|
constexpr boll ends_with(CharT c) const noexcept;
constexpr bool ends_with(const CharT* s) const;


All the three overloaded forms of the function effectively return std::basic_string_view<Char T,  Traits>(data(), size()).ends_with(x);

Parameters: It requires a single character sequence or a single character to compare to the end of the string.

Return Value: It returns the boolean true or false indicating the following:

True: If string ends with the suffix.
False: If string does not end with the suffix.
Program 2:

Below program to demonstrates the concept of ends_with() in C++:


// C++ program to illustrate the use
// of ends_with()
#include <iostream>
#include <string>
#include <string_view>
using namespace std;

// Function template to check if the
// given string ends_with given string
template <typename SuffixType>
void if_suffix(const std::string& str,
               SuffixType suffix)
{
    cout << "'" << str << "' ends with '" << suffix << "': " << str.ends_with(suffix) << std::endl;
}

// Driver Code
int main()
{
    string str = { "geeksforgeeks" };

    if_suffix(str, string("geeks"));

    // suffix is string
    if_suffix(str, string_view("geeks"));

    // suffix is string view
    if_suffix(str, 's');

    // suffix is single character
    if_suffix(str,
              "geeks\0");

    // suffix is C-style string
    if_suffix(str, string("for"));

    if_suffix(str, string("Geeks"));

    if_suffix(str, 'x');

    if_suffix(str, '\0');
}
Output:




Comment

More info

Campus Training Program
Next Article 
Code Bloating in C++ with Examples
Similar Reads
std::string::crbegin() and std::string::crend() in C++ with Examples
std::string::crbegin() The std::string::crbegin() is a string class built-in function that returns a constant reverse iterator referring to the last element in the string....
15+ min read
Binary literals in C++14 with Examples
In this article, we will discuss Binary literals in C++14. While writing programs which involve mathematical evaluations or various types of number, we usually like to spe...
8 min read
std::string::rfind in C++ with Examples
The std::string::rfind is a string class member function that is used to search the last occurrence of any character in the string. If the character is present in the stri...
15+ min read
Code Bloating in C++ with Examples
Code bloat is the production of code that is perceived as unnecessarily long, slow, or otherwise wasteful of resources. It is a problem in Software Development which makes...
15+ min read
Ellipsis in C++ with Examples
Ellipsis in C++ allows the function to accept an indeterminate number of arguments. It is also known as the variable argument list. Ellipsis tells the compiler to not chec...
15+ min read
std::string::find_last_of in C++ with Examples
The std::string::find_last_of is a string class member function which is used to find the index of last occurrence of any characters in a string. If the character is prese...
15+ min read
Clockwise/Spiral Rule in C/C++ with Examples
The Spiral/Clockwise Method is a magic tool for C/C++ programmers to define the meaning of syntax declaration in the head within seconds. This method was created by David...
15+ min read
Find if a String ends With the Given Substring in C++
You are given two strings. The task is to check if the main string ends with another string in C++. Example Input: mainString = "Hello! Geek"; targetString = "Geek" Output...
10 min read
Deprecated attribute in C++14 with Examples
In this article, we will discuss Deprecated attribute in C++14. Deprecated means the use of the name or entity declared with this attribute is allowed but discouraged for...
9 min read
How to Create a Class with Constructors and Destructors in C++?
In C++, a class is a user-defined data type encapsulating data members and member functions. The constructors and destructors are special member functions of a class used...
9 min read
course-img
166k+ interested Geeks
C Programming Course Online - Learn C with Data Structures
Explore
course-img
258k+ interested Geeks
Master Competitive Programming - Complete Beginner to Advanced
Explore
course-img
24k+ interested Geeks
GATE CSE Rank Booster with Expert-Curated Questions
Explore


geeksforgeeks-footer-logo
Corporate & Communications Address:
A-143, 7th Floor, Sovereign Corporate Tower, Sector- 136, Noida, Uttar Pradesh (201305)
Registered Address:
K 061, Tower K, Gulshan Vivante Apartment, Sector 137, Noida, Gautam Buddh Nagar, Uttar Pradesh, 201305
GFG App on Play Store
GFG App on App Store
Advertise with us
Company
About Us
Legal
Privacy Policy
Careers
In Media
Contact Us
GfG Corporate Solution
Placement Training Program
Explore
Job-A-Thon Hiring Challenge
GfG Weekly Contest
Offline Classroom Program
DSA in JAVA/C++
Master System Design
Master CP
GeeksforGeeks Videos
Languages
Python
Java
C++
PHP
GoLang
SQL
R Language
Android Tutorial
DSA
Data Structures
Algorithms
DSA for Beginners
Basic DSA Problems
DSA Roadmap
DSA Interview Questions
Competitive Programming
Data Science & ML
Data Science With Python
Data Science For Beginner
Machine Learning
ML Maths
Data Visualisation
Pandas
NumPy
NLP
Deep Learning
Web Technologies
HTML
CSS
JavaScript
TypeScript
ReactJS
NextJS
NodeJs
Bootstrap
Tailwind CSS
Python Tutorial
Python Programming Examples
Django Tutorial
Python Projects
Python Tkinter
Web Scraping
OpenCV Tutorial
Python Interview Question
Computer Science
GATE CS Notes
Operating Systems
Computer Network
Database Management System
Software Engineering
Digital Logic Design
Engineering Maths
DevOps
Git
AWS
Docker
Kubernetes
Azure
GCP
DevOps Roadmap
System Design
High Level Design
Low Level Design
UML Diagrams
Interview Guide
Design Patterns
OOAD
System Design Bootcamp
Interview Questions
School Subjects
Mathematics
Physics
Chemistry
Biology
Social Science
English Grammar
Databases
SQL
MYSQL
PostgreSQL
PL/SQL
MongoDB
Preparation Corner
Company-Wise Recruitment Process
Aptitude Preparation
Puzzles
Company-Wise Preparation
More Tutorials
Software Development
Software Testing
Product Management
Project Management
Linux
Excel
All Cheat Sheets
Machine Learning/Data Science
Complete Machine Learning & Data Science Program - [LIVE]
Data Analytics Training using Excel, SQL, Python & PowerBI - [LIVE]
Data Science Training Program - [LIVE]
Data Science Course with IBM Certification
Programming Languages
C Programming with Data Structures
C++ Programming Course
Java Programming Course
Python Full Course
Clouds/Devops
DevOps Engineering
AWS Solutions Architect Certification
Salesforce Certified Administrator Course
GATE 2026
GATE CS Rank Booster
GATE DA Rank Booster
GATE CS & IT Course - 2026
GATE DA Course 2026
GATE Rank Predictor
@GeeksforGeeks, Sanchhaya Education Private Limited, All rights reserved
We use cookies to ensure you have the best browsing experience on our website. By using our site, you acknowledge that you have read and understood our Cookie Policy & Privacy Policy
Got It !
Lightbox
